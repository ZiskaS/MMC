{"ast":null,"code":"import axios from \"axios\";\n\n// Function to send a POST request for login\nexport function login() {\n  const username = \"john\";\n  const password = \"P4ssW0rd!#\";\n  return axios.post(\"https://thre-points.herokuapp.com/api/login\", {\n    username,\n    password\n  }).then(response => {\n    // Assuming the response contains a token\n    const token = response.data.token;\n\n    // Do something with the token, such as storing it in local storage\n    localStorage.setItem(\"token\", token);\n\n    // Return the token or other relevant data\n    return token;\n  });\n}\n\n// Example usage\nlogin().then(token => {\n  console.log(\"Login successful. Token:\", token);\n}).catch(error => {\n  console.error(\"Login error:\", error);\n});\n\n// Function to get the list of posts\nexport function getPostList() {\n  return axios.get(\"http://localhost:3000/postList\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  }).then(response => response.data);\n}\n\n// Function to get the user profile\nexport function getProfile() {\n  return axios.get(\"http://localhost:3000/profile\", {\n    headers: {\n      Authorization: `Bearer ${localStorage.getItem(\"token\")}`\n    }\n  }).then(response => response.data);\n}","map":{"version":3,"names":["axios","login","username","password","post","then","response","token","data","localStorage","setItem","console","log","catch","error","getPostList","get","headers","Authorization","getItem","getProfile"],"sources":["/Users/Franziska/Desktop/Frontend Frameworks/REACT-excercise-4/my-dog-with-routes/src/service/dataservice.jsx"],"sourcesContent":["import axios from \"axios\";\n\n// Function to send a POST request for login\nexport function login() {\n  const username = \"john\";\n  const password = \"P4ssW0rd!#\";\n\n  return axios\n    .post(\"https://thre-points.herokuapp.com/api/login\", {\n      username,\n      password,\n    })\n    .then((response) => {\n      // Assuming the response contains a token\n      const token = response.data.token;\n\n      // Do something with the token, such as storing it in local storage\n      localStorage.setItem(\"token\", token);\n\n      // Return the token or other relevant data\n      return token;\n    });\n}\n\n// Example usage\nlogin()\n  .then((token) => {\n    console.log(\"Login successful. Token:\", token);\n  })\n  .catch((error) => {\n    console.error(\"Login error:\", error);\n  });\n  \n// Function to get the list of posts\nexport function getPostList() {\n  return axios\n    .get(\"http://localhost:3000/postList\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    })\n    .then((response) => response.data);\n}\n\n// Function to get the user profile\nexport function getProfile() {\n  return axios\n    .get(\"http://localhost:3000/profile\", {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n      },\n    })\n    .then((response) => response.data);\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;;AAEzB;AACA,OAAO,SAASC,KAAKA,CAAA,EAAG;EACtB,MAAMC,QAAQ,GAAG,MAAM;EACvB,MAAMC,QAAQ,GAAG,YAAY;EAE7B,OAAOH,KAAK,CACTI,IAAI,CAAC,6CAA6C,EAAE;IACnDF,QAAQ;IACRC;EACF,CAAC,CAAC,CACDE,IAAI,CAAEC,QAAQ,IAAK;IAClB;IACA,MAAMC,KAAK,GAAGD,QAAQ,CAACE,IAAI,CAACD,KAAK;;IAEjC;IACAE,YAAY,CAACC,OAAO,CAAC,OAAO,EAAEH,KAAK,CAAC;;IAEpC;IACA,OAAOA,KAAK;EACd,CAAC,CAAC;AACN;;AAEA;AACAN,KAAK,CAAC,CAAC,CACJI,IAAI,CAAEE,KAAK,IAAK;EACfI,OAAO,CAACC,GAAG,CAAC,0BAA0B,EAAEL,KAAK,CAAC;AAChD,CAAC,CAAC,CACDM,KAAK,CAAEC,KAAK,IAAK;EAChBH,OAAO,CAACG,KAAK,CAAC,cAAc,EAAEA,KAAK,CAAC;AACtC,CAAC,CAAC;;AAEJ;AACA,OAAO,SAASC,WAAWA,CAAA,EAAG;EAC5B,OAAOf,KAAK,CACTgB,GAAG,CAAC,gCAAgC,EAAE;IACrCC,OAAO,EAAE;MACPC,aAAa,EAAG,UAAST,YAAY,CAACU,OAAO,CAAC,OAAO,CAAE;IACzD;EACF,CAAC,CAAC,CACDd,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACE,IAAI,CAAC;AACtC;;AAEA;AACA,OAAO,SAASY,UAAUA,CAAA,EAAG;EAC3B,OAAOpB,KAAK,CACTgB,GAAG,CAAC,+BAA+B,EAAE;IACpCC,OAAO,EAAE;MACPC,aAAa,EAAG,UAAST,YAAY,CAACU,OAAO,CAAC,OAAO,CAAE;IACzD;EACF,CAAC,CAAC,CACDd,IAAI,CAAEC,QAAQ,IAAKA,QAAQ,CAACE,IAAI,CAAC;AACtC"},"metadata":{},"sourceType":"module","externalDependencies":[]}