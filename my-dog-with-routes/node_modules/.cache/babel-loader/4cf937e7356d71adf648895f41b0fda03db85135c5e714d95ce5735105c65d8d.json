{"ast":null,"code":"var _jsxFileName = \"/Users/Franziska/Desktop/ejercicio 4/my-dog-with-routes/src/components/login.jsx\",\n  _s = $RefreshSig$();\nimport axios from 'axios'; // Import axios for HTTP requests\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login({\n  onLogin\n}) {\n  _s();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('https://three-points.herokuapp.com/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          username: email,\n          password\n        })\n      });\n      if (response.status === 200) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        onLogin(); // Call onLogin when the login is successful\n        console.log('Login successful'); // Add a log statement\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"alert alert-danger\",\n      children: \"Login failed. Please check your credentials.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [\" \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"username\",\n        className: \"form-control mb-3\",\n        placeholder: \"Username\",\n        required: true,\n        value: email // Add value attribute for controlled input\n        ,\n        onChange: e => setEmail(e.target.value) // Add onChange handler to update email state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        className: \"form-control mb-3\",\n        placeholder: \"Password\",\n        required: true,\n        value: password // Add value attribute for controlled input\n        ,\n        onChange: e => setPassword(e.target.value) // Add onChange handler to update password state\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-success\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"Lw6fnQDhm6jsOqAyGKvgSas+k/M=\");\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["axios","React","useState","jsxDEV","_jsxDEV","Login","onLogin","_s","email","setEmail","password","setPassword","error","setError","handleLogin","response","fetch","method","headers","body","JSON","stringify","username","status","data","json","localStorage","setItem","token","console","log","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","name","placeholder","required","value","onChange","e","target","_c","$RefreshReg$"],"sources":["/Users/Franziska/Desktop/ejercicio 4/my-dog-with-routes/src/components/login.jsx"],"sourcesContent":["import axios from 'axios'; // Import axios for HTTP requests\nimport React, { useState } from 'react';\n\nfunction Login({ onLogin }) {\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState(false);\n\n  const handleLogin = async () => {\n    try {\n      const response = await fetch('https://three-points.herokuapp.com/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify({ username: email, password }),\n      });\n  \n      if (response.status === 200) {\n        const data = await response.json();\n        localStorage.setItem('token', data.token);\n        onLogin(); // Call onLogin when the login is successful\n        console.log('Login successful'); // Add a log statement\n      } else {\n        setError(true);\n      }\n    } catch (error) {\n      console.error('Error:', error);\n    }\n  };\n\n  return (\n    <div>\n      {error && <div className=\"alert alert-danger\">Login failed. Please check your credentials.</div>}\n      <form onSubmit={handleLogin}> {/* Use handleLogin here */}\n        <input\n          type=\"text\"\n          name=\"username\"\n          className=\"form-control mb-3\"\n          placeholder=\"Username\"\n          required\n          value={email} // Add value attribute for controlled input\n          onChange={(e) => setEmail(e.target.value)} // Add onChange handler to update email state\n        />\n        <input\n          type=\"password\"\n          name=\"password\"\n          className=\"form-control mb-3\"\n          placeholder=\"Password\"\n          required\n          value={password} // Add value attribute for controlled input\n          onChange={(e) => setPassword(e.target.value)} // Add onChange handler to update password state\n        />\n        <button type=\"submit\" className=\"btn btn-success\">\n          Login\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default Login;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}